# Client port of 4222 on all interfaces
server_name = N1
listen = 4222

authorization {
  username = v8tix
  password = 7c42ca12-af69-4a23-9561-3fbca8bf24b3
  timeout = 5
}

# Limit to a single connection,
#max_connections = 100
# Disconnect after the 3rd PONG reply is missed
ping_max = 3
# Ping every 30s
ping_interval = 30
logtime = true
debug = true
trace = false

# Profiler port
# Example:
# go tool pprof http://n1.nats.net:9090/debug/pprof/goroutine
prof_port: 9090

# HTTP monitoring port
# Example:
# curl http://n1.nats.net:8222/varz
# curl http://n1.nats.net:8222/connz
# curl http://n1.nats.net:8222/subsz
# curl http://n1.nats.net:8222/routez
monitor_port: 8222

# This is for clustering multiple servers together.
cluster {
  # It is recommended to set a cluster name
  name: "NATS"

  # Route connections to be received on any interface on port 6222
  # port: 6222
  listen = 0.0.0.0:6222

  # Routes are protected, so need to use them with --routes flag
  # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222
  #authorization {
  #  user: ruser
  #  password: T0pS3cr3t
  #  timeout: 2
  #}

  # Routes are actively solicited and connected to from this server.
  # This Docker image has none by default, but you can pass a
  # flag to the nats-server docker image to create one to an existing server.
  routes = [
    nats://v8tix:7c42ca12-af69-4a23-9561-3fbca8bf24b3@n2.nats.net:6222
    nats://v8tix:7c42ca12-af69-4a23-9561-3fbca8bf24b3@n3.nats.net:6222
  ]
}

jetstream {
  store_dir: /var/lib/nats/data-1
  # 1GB
  max_memory_store: 1073741824
  # 10GB
  max_file_store: 10737418240
}